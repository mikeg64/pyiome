################################################## 
# IoSteerWS_services.py 
# generated by ZSI.generate.wsdl2python
##################################################


from IoSteerWS_services_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
import ZSI

# Locator
class IoSteerWSLocator:
    IoSteerWSPortType_address = "http://mikeg.staff.shef.ac.uk/IOSteerWS.cgi"
    def getIoSteerWSPortTypeAddress(self):
        return IoSteerWSLocator.IoSteerWSPortType_address
    def getIoSteerWSPortType(self, url=None, **kw):
        return IoSteerWSSOAP(url or IoSteerWSLocator.IoSteerWSPortType_address, **kw)

# Methods
class IoSteerWSSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: add
    def add(self, request):
        if isinstance(request, addRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=addResponse.typecode.ofwhat, pyclass=addResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getstep
    def getstep(self, request):
        if isinstance(request, getstepRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getstepResponse.typecode.ofwhat, pyclass=getstepResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: setstep
    def setstep(self, request):
        if isinstance(request, setstepRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=setstepResponse.typecode.ofwhat, pyclass=setstepResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getnsteps
    def getnsteps(self, request):
        if isinstance(request, getnstepsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getnstepsResponse.typecode.ofwhat, pyclass=getnstepsResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: setnsteps
    def setnsteps(self, request):
        if isinstance(request, setnstepsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=setnstepsResponse.typecode.ofwhat, pyclass=setnstepsResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: runsimulationstep
    def runsimulationstep(self, request):
        if isinstance(request, runsimulationstepRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=runsimulationstepResponse.typecode.ofwhat, pyclass=runsimulationstepResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: runsimulation
    def runsimulation(self, request):
        if isinstance(request, runsimulationRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=runsimulationResponse.typecode.ofwhat, pyclass=runsimulationResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: requestsimulation
    def requestsimulation(self, request):
        if isinstance(request, requestsimulationRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=requestsimulationResponse.typecode.ofwhat, pyclass=requestsimulationResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: runrequestedsimulation
    def runrequestedsimulation(self, request):
        if isinstance(request, runrequestedsimulationRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=runrequestedsimulationResponse.typecode.ofwhat, pyclass=runrequestedsimulationResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: submitsimulation
    def submitsimulation(self, request):
        if isinstance(request, submitsimulationRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=submitsimulationResponse.typecode.ofwhat, pyclass=submitsimulationResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: simulationstatus
    def simulationstatus(self, request):
        if isinstance(request, simulationstatusRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=simulationstatusResponse.typecode.ofwhat, pyclass=simulationstatusResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: setsimulationstatus
    def setsimulationstatus(self, request):
        if isinstance(request, setsimulationstatusRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=setsimulationstatusResponse.typecode.ofwhat, pyclass=setsimulationstatusResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getsimulationresults
    def getsimulationresults(self, request):
        if isinstance(request, getsimulationresultsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getsimulationresultsResponse.typecode.ofwhat, pyclass=getsimulationresultsResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: deletesimulation
    def deletesimulation(self, request):
        if isinstance(request, deletesimulationRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=deletesimulationResponse.typecode.ofwhat, pyclass=deletesimulationResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: newsimulation
    def newsimulation(self, request):
        if isinstance(request, newsimulationRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=newsimulationResponse.typecode.ofwhat, pyclass=newsimulationResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: createsimulation
    def createsimulation(self, request):
        if isinstance(request, createsimulationRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=createsimulationResponse.typecode.ofwhat, pyclass=createsimulationResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: writelocalsimulation
    def writelocalsimulation(self, request):
        if isinstance(request, writelocalsimulationRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=writelocalsimulationResponse.typecode.ofwhat, pyclass=writelocalsimulationResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: readlocalsimulation
    def readlocalsimulation(self, request):
        if isinstance(request, readlocalsimulationRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=readlocalsimulationResponse.typecode.ofwhat, pyclass=readlocalsimulationResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: writesimulation
    def writesimulation(self, request):
        if isinstance(request, writesimulationRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=writesimulationResponse.typecode.ofwhat, pyclass=writesimulationResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: readsimulation
    def readsimulation(self, request):
        if isinstance(request, readsimulationRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=readsimulationResponse.typecode.ofwhat, pyclass=readsimulationResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: exitiome
    def exitiome(self, request):
        if isinstance(request, exitiomeRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=exitiomeResponse.typecode.ofwhat, pyclass=exitiomeResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: addparamdouble
    def addparamdouble(self, request):
        if isinstance(request, addparamdoubleRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=addparamdoubleResponse.typecode.ofwhat, pyclass=addparamdoubleResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: addparamint
    def addparamint(self, request):
        if isinstance(request, addparamintRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=addparamintResponse.typecode.ofwhat, pyclass=addparamintResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: addparamvec
    def addparamvec(self, request):
        if isinstance(request, addparamvecRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=addparamvecResponse.typecode.ofwhat, pyclass=addparamvecResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: addparammat
    def addparammat(self, request):
        if isinstance(request, addparammatRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=addparammatResponse.typecode.ofwhat, pyclass=addparammatResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: addparamstring
    def addparamstring(self, request):
        if isinstance(request, addparamstringRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=addparamstringResponse.typecode.ofwhat, pyclass=addparamstringResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: addparammmat3d
    def addparammmat3d(self, request):
        if isinstance(request, addparammmat3dRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=addparammmat3dResponse.typecode.ofwhat, pyclass=addparammmat3dResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: addmetadata
    def addmetadata(self, request):
        if isinstance(request, addmetadataRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=addmetadataResponse.typecode.ofwhat, pyclass=addmetadataResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getparamdouble
    def getparamdouble(self, request):
        if isinstance(request, getparamdoubleRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getparamdoubleResponse.typecode.ofwhat, pyclass=getparamdoubleResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getparamint
    def getparamint(self, request):
        if isinstance(request, getparamintRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getparamintResponse.typecode.ofwhat, pyclass=getparamintResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getparamvec
    def getparamvec(self, request):
        if isinstance(request, getparamvecRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getparamvecResponse.typecode.ofwhat, pyclass=getparamvecResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getparammat
    def getparammat(self, request):
        if isinstance(request, getparammatRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getparammatResponse.typecode.ofwhat, pyclass=getparammatResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getparamstring
    def getparamstring(self, request):
        if isinstance(request, getparamstringRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getparamstringResponse.typecode.ofwhat, pyclass=getparamstringResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getparammmat3d
    def getparammmat3d(self, request):
        if isinstance(request, getparammmat3dRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getparammmat3dResponse.typecode.ofwhat, pyclass=getparammmat3dResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getmetadata
    def getmetadata(self, request):
        if isinstance(request, getmetadataRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getmetadataResponse.typecode.ofwhat, pyclass=getmetadataResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: setparamdouble
    def setparamdouble(self, request):
        if isinstance(request, setparamdoubleRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=setparamdoubleResponse.typecode.ofwhat, pyclass=setparamdoubleResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: setparamint
    def setparamint(self, request):
        if isinstance(request, setparamintRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=setparamintResponse.typecode.ofwhat, pyclass=setparamintResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: setparamvec
    def setparamvec(self, request):
        if isinstance(request, setparamvecRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=setparamvecResponse.typecode.ofwhat, pyclass=setparamvecResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: setparammat
    def setparammat(self, request):
        if isinstance(request, setparammatRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=setparammatResponse.typecode.ofwhat, pyclass=setparammatResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: setparamstring
    def setparamstring(self, request):
        if isinstance(request, setparamstringRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=setparamstringResponse.typecode.ofwhat, pyclass=setparamstringResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: setparammmat3d
    def setparammmat3d(self, request):
        if isinstance(request, setparammmat3dRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=setparammmat3dResponse.typecode.ofwhat, pyclass=setparammmat3dResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: setmetadata
    def setmetadata(self, request):
        if isinstance(request, setmetadataRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=setmetadataResponse.typecode.ofwhat, pyclass=setmetadataResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: listmetadata
    def listmetadata(self, request):
        if isinstance(request, listmetadataRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=listmetadataResponse.typecode.ofwhat, pyclass=listmetadataResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: deletemetadata
    def deletemetadata(self, request):
        if isinstance(request, deletemetadataRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=deletemetadataResponse.typecode.ofwhat, pyclass=deletemetadataResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: deleteparam
    def deleteparam(self, request):
        if isinstance(request, deleteparamRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=deleteparamResponse.typecode.ofwhat, pyclass=deleteparamResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: listparam
    def listparam(self, request):
        if isinstance(request, listparamRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=listparamResponse.typecode.ofwhat, pyclass=listparamResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getnumobj
    def getnumobj(self, request):
        if isinstance(request, getnumobjRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getnumobjResponse.typecode.ofwhat, pyclass=getnumobjResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getobjnum
    def getobjnum(self, request):
        if isinstance(request, getobjnumRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getobjnumResponse.typecode.ofwhat, pyclass=getobjnumResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: testgroupbarrier
    def testgroupbarrier(self, request):
        if isinstance(request, testgroupbarrierRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=testgroupbarrierResponse.typecode.ofwhat, pyclass=testgroupbarrierResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: setgroupbarrier
    def setgroupbarrier(self, request):
        if isinstance(request, setgroupbarrierRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=setgroupbarrierResponse.typecode.ofwhat, pyclass=setgroupbarrierResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

class addRequest:
    def __init__(self):
        self._a = None
        self._b = None
        return
addRequest.typecode = Struct(pname=("urn:IoSteerWS","add"), ofwhat=[ZSI.TCnumbers.FPdouble(pname="a", aname="_a", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.FPdouble(pname="b", aname="_b", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=addRequest, encoded="urn:IoSteerWS")

class addResponse:
    def __init__(self):
        self._result = None
        return
addResponse.typecode = Struct(pname=("urn:IoSteerWS","addResponse"), ofwhat=[ZSI.TCnumbers.FPdouble(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=addResponse, encoded="urn:IoSteerWS")

class getstepRequest:
    def __init__(self):
        self._id = None
        return
getstepRequest.typecode = Struct(pname=("urn:IoSteerWS","getstep"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getstepRequest, encoded="urn:IoSteerWS")

class getstepResponse:
    def __init__(self):
        self._step = None
        return
getstepResponse.typecode = Struct(pname=("urn:IoSteerWS","getstepResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="step", aname="_step", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getstepResponse, encoded="urn:IoSteerWS")

class setstepRequest:
    def __init__(self):
        self._id = None
        self._newstep = None
        return
setstepRequest.typecode = Struct(pname=("urn:IoSteerWS","setstep"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="newstep", aname="_newstep", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=setstepRequest, encoded="urn:IoSteerWS")

class setstepResponse:
    def __init__(self):
        self._step = None
        return
setstepResponse.typecode = Struct(pname=("urn:IoSteerWS","setstepResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="step", aname="_step", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=setstepResponse, encoded="urn:IoSteerWS")

class getnstepsRequest:
    def __init__(self):
        self._id = None
        return
getnstepsRequest.typecode = Struct(pname=("urn:IoSteerWS","getnsteps"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getnstepsRequest, encoded="urn:IoSteerWS")

class getnstepsResponse:
    def __init__(self):
        self._nsstep = None
        return
getnstepsResponse.typecode = Struct(pname=("urn:IoSteerWS","getnstepsResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="nsstep", aname="_nsstep", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getnstepsResponse, encoded="urn:IoSteerWS")

class setnstepsRequest:
    def __init__(self):
        self._id = None
        self._newnsteps = None
        return
setnstepsRequest.typecode = Struct(pname=("urn:IoSteerWS","setnsteps"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="newnsteps", aname="_newnsteps", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=setnstepsRequest, encoded="urn:IoSteerWS")

class setnstepsResponse:
    def __init__(self):
        self._nsteps = None
        return
setnstepsResponse.typecode = Struct(pname=("urn:IoSteerWS","setnstepsResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="nsteps", aname="_nsteps", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=setnstepsResponse, encoded="urn:IoSteerWS")

class runsimulationstepRequest:
    def __init__(self):
        self._id = None
        self._istepnum = None
        return
runsimulationstepRequest.typecode = Struct(pname=("urn:IoSteerWS","runsimulationstep"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="istepnum", aname="_istepnum", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=runsimulationstepRequest, encoded="urn:IoSteerWS")

class runsimulationstepResponse:
    def __init__(self):
        self._status = None
        return
runsimulationstepResponse.typecode = Struct(pname=("urn:IoSteerWS","runsimulationstepResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="status", aname="_status", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=runsimulationstepResponse, encoded="urn:IoSteerWS")

class runsimulationRequest:
    def __init__(self):
        self._id = None
        self._simfilecontent = None
        return
runsimulationRequest.typecode = Struct(pname=("urn:IoSteerWS","runsimulation"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="simfilecontent", aname="_simfilecontent", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=runsimulationRequest, encoded="urn:IoSteerWS")

class runsimulationResponse:
    def __init__(self):
        self._result = None
        return
runsimulationResponse.typecode = Struct(pname=("urn:IoSteerWS","runsimulationResponse"), ofwhat=[ZSI.TC.String(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=runsimulationResponse, encoded="urn:IoSteerWS")

class requestsimulationRequest:
    def __init__(self):
        self._simfilecontent = None
        return
requestsimulationRequest.typecode = Struct(pname=("urn:IoSteerWS","requestsimulation"), ofwhat=[ZSI.TC.String(pname="simfilecontent", aname="_simfilecontent", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=requestsimulationRequest, encoded="urn:IoSteerWS")

class requestsimulationResponse:
    def __init__(self):
        self._isimid = None
        return
requestsimulationResponse.typecode = Struct(pname=("urn:IoSteerWS","requestsimulationResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="isimid", aname="_isimid", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=requestsimulationResponse, encoded="urn:IoSteerWS")

class runrequestedsimulationRequest:
    def __init__(self):
        self._isimid = None
        return
runrequestedsimulationRequest.typecode = Struct(pname=("urn:IoSteerWS","runrequestedsimulation"), ofwhat=[ZSI.TCnumbers.Iint(pname="isimid", aname="_isimid", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=runrequestedsimulationRequest, encoded="urn:IoSteerWS")

class runrequestedsimulationResponse:
    def __init__(self):
        self._istatus = None
        return
runrequestedsimulationResponse.typecode = Struct(pname=("urn:IoSteerWS","runrequestedsimulationResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="istatus", aname="_istatus", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=runrequestedsimulationResponse, encoded="urn:IoSteerWS")

class submitsimulationRequest:
    def __init__(self):
        self._simfilecontent = None
        return
submitsimulationRequest.typecode = Struct(pname=("urn:IoSteerWS","submitsimulation"), ofwhat=[ZSI.TC.String(pname="simfilecontent", aname="_simfilecontent", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=submitsimulationRequest, encoded="urn:IoSteerWS")

class submitsimulationResponse:
    def __init__(self):
        self._isimid = None
        return
submitsimulationResponse.typecode = Struct(pname=("urn:IoSteerWS","submitsimulationResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="isimid", aname="_isimid", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=submitsimulationResponse, encoded="urn:IoSteerWS")

class simulationstatusRequest:
    def __init__(self):
        self._isimid = None
        return
simulationstatusRequest.typecode = Struct(pname=("urn:IoSteerWS","simulationstatus"), ofwhat=[ZSI.TCnumbers.Iint(pname="isimid", aname="_isimid", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=simulationstatusRequest, encoded="urn:IoSteerWS")

class simulationstatusResponse:
    def __init__(self):
        self._status = None
        return
simulationstatusResponse.typecode = Struct(pname=("urn:IoSteerWS","simulationstatusResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="status", aname="_status", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=simulationstatusResponse, encoded="urn:IoSteerWS")

class setsimulationstatusRequest:
    def __init__(self):
        self._newstatus = None
        self._isimid = None
        return
setsimulationstatusRequest.typecode = Struct(pname=("urn:IoSteerWS","setsimulationstatus"), ofwhat=[ZSI.TCnumbers.Iint(pname="newstatus", aname="_newstatus", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="isimid", aname="_isimid", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=setsimulationstatusRequest, encoded="urn:IoSteerWS")

class setsimulationstatusResponse:
    def __init__(self):
        self._status = None
        return
setsimulationstatusResponse.typecode = Struct(pname=("urn:IoSteerWS","setsimulationstatusResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="status", aname="_status", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=setsimulationstatusResponse, encoded="urn:IoSteerWS")

class getsimulationresultsRequest:
    def __init__(self):
        self._isimid = None
        return
getsimulationresultsRequest.typecode = Struct(pname=("urn:IoSteerWS","getsimulationresults"), ofwhat=[ZSI.TCnumbers.Iint(pname="isimid", aname="_isimid", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getsimulationresultsRequest, encoded="urn:IoSteerWS")

class getsimulationresultsResponse:
    def __init__(self):
        self._result = None
        return
getsimulationresultsResponse.typecode = Struct(pname=("urn:IoSteerWS","getsimulationresultsResponse"), ofwhat=[ZSI.TC.String(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getsimulationresultsResponse, encoded="urn:IoSteerWS")

class deletesimulationRequest:
    def __init__(self):
        self._isimid = None
        return
deletesimulationRequest.typecode = Struct(pname=("urn:IoSteerWS","deletesimulation"), ofwhat=[ZSI.TCnumbers.Iint(pname="isimid", aname="_isimid", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=deletesimulationRequest, encoded="urn:IoSteerWS")

class deletesimulationResponse:
    def __init__(self):
        self._status = None
        return
deletesimulationResponse.typecode = Struct(pname=("urn:IoSteerWS","deletesimulationResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="status", aname="_status", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=deletesimulationResponse, encoded="urn:IoSteerWS")

class newsimulationRequest:
    def __init__(self):
        self._id = None
        self._simname = None
        self._xslname = None
        return
newsimulationRequest.typecode = Struct(pname=("urn:IoSteerWS","newsimulation"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="simname", aname="_simname", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="xslname", aname="_xslname", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=newsimulationRequest, encoded="urn:IoSteerWS")

class newsimulationResponse:
    def __init__(self):
        self._status = None
        return
newsimulationResponse.typecode = Struct(pname=("urn:IoSteerWS","newsimulationResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="status", aname="_status", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=newsimulationResponse, encoded="urn:IoSteerWS")

class createsimulationRequest:
    def __init__(self):
        self._id = None
        self._filename = None
        return
createsimulationRequest.typecode = Struct(pname=("urn:IoSteerWS","createsimulation"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="filename", aname="_filename", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=createsimulationRequest, encoded="urn:IoSteerWS")

class createsimulationResponse:
    def __init__(self):
        self._status = None
        return
createsimulationResponse.typecode = Struct(pname=("urn:IoSteerWS","createsimulationResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="status", aname="_status", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=createsimulationResponse, encoded="urn:IoSteerWS")

class writelocalsimulationRequest:
    def __init__(self):
        self._id = None
        self._filename = None
        return
writelocalsimulationRequest.typecode = Struct(pname=("urn:IoSteerWS","writelocalsimulation"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="filename", aname="_filename", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=writelocalsimulationRequest, encoded="urn:IoSteerWS")

class writelocalsimulationResponse:
    def __init__(self):
        self._filecontent = None
        return
writelocalsimulationResponse.typecode = Struct(pname=("urn:IoSteerWS","writelocalsimulationResponse"), ofwhat=[ZSI.TC.String(pname="filecontent", aname="_filecontent", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=writelocalsimulationResponse, encoded="urn:IoSteerWS")

class readlocalsimulationRequest:
    def __init__(self):
        self._id = None
        self._filename = None
        return
readlocalsimulationRequest.typecode = Struct(pname=("urn:IoSteerWS","readlocalsimulation"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="filename", aname="_filename", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=readlocalsimulationRequest, encoded="urn:IoSteerWS")

class readlocalsimulationResponse:
    def __init__(self):
        self._status = None
        return
readlocalsimulationResponse.typecode = Struct(pname=("urn:IoSteerWS","readlocalsimulationResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="status", aname="_status", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=readlocalsimulationResponse, encoded="urn:IoSteerWS")

class writesimulationRequest:
    def __init__(self):
        self._id = None
        self._filename = None
        return
writesimulationRequest.typecode = Struct(pname=("urn:IoSteerWS","writesimulation"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="filename", aname="_filename", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=writesimulationRequest, encoded="urn:IoSteerWS")

class writesimulationResponse:
    def __init__(self):
        self._filecontent = None
        return
writesimulationResponse.typecode = Struct(pname=("urn:IoSteerWS","writesimulationResponse"), ofwhat=[ZSI.TC.String(pname="filecontent", aname="_filecontent", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=writesimulationResponse, encoded="urn:IoSteerWS")

class readsimulationRequest:
    def __init__(self):
        self._id = None
        self._filename = None
        return
readsimulationRequest.typecode = Struct(pname=("urn:IoSteerWS","readsimulation"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="filename", aname="_filename", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=readsimulationRequest, encoded="urn:IoSteerWS")

class readsimulationResponse:
    def __init__(self):
        self._status = None
        return
readsimulationResponse.typecode = Struct(pname=("urn:IoSteerWS","readsimulationResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="status", aname="_status", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=readsimulationResponse, encoded="urn:IoSteerWS")

class exitiomeRequest:
    def __init__(self):
        self._id = None
        return
exitiomeRequest.typecode = Struct(pname=("urn:IoSteerWS","exitiome"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=exitiomeRequest, encoded="urn:IoSteerWS")

class exitiomeResponse:
    def __init__(self):
        self._status = None
        return
exitiomeResponse.typecode = Struct(pname=("urn:IoSteerWS","exitiomeResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="status", aname="_status", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=exitiomeResponse, encoded="urn:IoSteerWS")

class addparamdoubleRequest:
    def __init__(self):
        self._id = None
        self._name = None
        self._value = None
        self._iflag = None
        return
addparamdoubleRequest.typecode = Struct(pname=("urn:IoSteerWS","addparamdouble"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="name", aname="_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.FPdouble(pname="value", aname="_value", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="iflag", aname="_iflag", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=addparamdoubleRequest, encoded="urn:IoSteerWS")

class addparamdoubleResponse:
    def __init__(self):
        self._status = None
        return
addparamdoubleResponse.typecode = Struct(pname=("urn:IoSteerWS","addparamdoubleResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="status", aname="_status", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=addparamdoubleResponse, encoded="urn:IoSteerWS")

class addparamintRequest:
    def __init__(self):
        self._id = None
        self._name = None
        self._value = None
        self._iflag = None
        return
addparamintRequest.typecode = Struct(pname=("urn:IoSteerWS","addparamint"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="name", aname="_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="value", aname="_value", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="iflag", aname="_iflag", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=addparamintRequest, encoded="urn:IoSteerWS")

class addparamintResponse:
    def __init__(self):
        self._status = None
        return
addparamintResponse.typecode = Struct(pname=("urn:IoSteerWS","addparamintResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="status", aname="_status", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=addparamintResponse, encoded="urn:IoSteerWS")

class addparamvecRequest:
    def __init__(self):
        self._id = None
        self._name = None
        self._value = None
        self._n = None
        self._iflag = None
        return
addparamvecRequest.typecode = Struct(pname=("urn:IoSteerWS","addparamvec"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="name", aname="_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.ArrayOfdouble_Def(pname="value", aname="_value", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="n", aname="_n", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="iflag", aname="_iflag", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=addparamvecRequest, encoded="urn:IoSteerWS")

class addparamvecResponse:
    def __init__(self):
        self._status = None
        return
addparamvecResponse.typecode = Struct(pname=("urn:IoSteerWS","addparamvecResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="status", aname="_status", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=addparamvecResponse, encoded="urn:IoSteerWS")

class addparammatRequest:
    def __init__(self):
        self._id = None
        self._name = None
        self._value = None
        self._nr = None
        self._nc = None
        self._iflag = None
        return
addparammatRequest.typecode = Struct(pname=("urn:IoSteerWS","addparammat"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="name", aname="_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.ArrayOfdouble_Def(pname="value", aname="_value", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="nr", aname="_nr", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="nc", aname="_nc", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="iflag", aname="_iflag", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=addparammatRequest, encoded="urn:IoSteerWS")

class addparammatResponse:
    def __init__(self):
        self._status = None
        return
addparammatResponse.typecode = Struct(pname=("urn:IoSteerWS","addparammatResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="status", aname="_status", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=addparammatResponse, encoded="urn:IoSteerWS")

class addparamstringRequest:
    def __init__(self):
        self._id = None
        self._name = None
        self._value = None
        self._iflag = None
        return
addparamstringRequest.typecode = Struct(pname=("urn:IoSteerWS","addparamstring"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="name", aname="_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="value", aname="_value", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="iflag", aname="_iflag", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=addparamstringRequest, encoded="urn:IoSteerWS")

class addparamstringResponse:
    def __init__(self):
        self._status = None
        return
addparamstringResponse.typecode = Struct(pname=("urn:IoSteerWS","addparamstringResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="status", aname="_status", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=addparamstringResponse, encoded="urn:IoSteerWS")

class addparammmat3dRequest:
    def __init__(self):
        self._id = None
        self._name = None
        self._value = None
        self._n = None
        self._p = None
        self._q = None
        self._nr = None
        self._nc = None
        self._iflag = None
        return
addparammmat3dRequest.typecode = Struct(pname=("urn:IoSteerWS","addparammmat3d"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="name", aname="_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.ArrayOfdouble_Def(pname="value", aname="_value", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="n", aname="_n", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="p", aname="_p", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="q", aname="_q", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="nr", aname="_nr", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="nc", aname="_nc", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="iflag", aname="_iflag", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=addparammmat3dRequest, encoded="urn:IoSteerWS")

class addparammmat3dResponse:
    def __init__(self):
        self._status = None
        return
addparammmat3dResponse.typecode = Struct(pname=("urn:IoSteerWS","addparammmat3dResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="status", aname="_status", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=addparammmat3dResponse, encoded="urn:IoSteerWS")

class addmetadataRequest:
    def __init__(self):
        self._id = None
        self._name = None
        self._property = None
        return
addmetadataRequest.typecode = Struct(pname=("urn:IoSteerWS","addmetadata"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="name", aname="_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="property", aname="_property", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=addmetadataRequest, encoded="urn:IoSteerWS")

class addmetadataResponse:
    def __init__(self):
        self._status = None
        return
addmetadataResponse.typecode = Struct(pname=("urn:IoSteerWS","addmetadataResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="status", aname="_status", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=addmetadataResponse, encoded="urn:IoSteerWS")

class getparamdoubleRequest:
    def __init__(self):
        self._id = None
        self._name = None
        return
getparamdoubleRequest.typecode = Struct(pname=("urn:IoSteerWS","getparamdouble"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="name", aname="_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getparamdoubleRequest, encoded="urn:IoSteerWS")

class getparamdoubleResponse:
    def __init__(self):
        self._value = None
        return
getparamdoubleResponse.typecode = Struct(pname=("urn:IoSteerWS","getparamdoubleResponse"), ofwhat=[ZSI.TCnumbers.FPdouble(pname="value", aname="_value", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getparamdoubleResponse, encoded="urn:IoSteerWS")

class getparamintRequest:
    def __init__(self):
        self._id = None
        self._name = None
        return
getparamintRequest.typecode = Struct(pname=("urn:IoSteerWS","getparamint"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="name", aname="_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getparamintRequest, encoded="urn:IoSteerWS")

class getparamintResponse:
    def __init__(self):
        self._value = None
        return
getparamintResponse.typecode = Struct(pname=("urn:IoSteerWS","getparamintResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="value", aname="_value", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getparamintResponse, encoded="urn:IoSteerWS")

class getparamvecRequest:
    def __init__(self):
        self._id = None
        self._name = None
        self._n = None
        return
getparamvecRequest.typecode = Struct(pname=("urn:IoSteerWS","getparamvec"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="name", aname="_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="n", aname="_n", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getparamvecRequest, encoded="urn:IoSteerWS")

class getparamvecResponse:
    def __init__(self):
        self._dval = None
        return
getparamvecResponse.typecode = Struct(pname=("urn:IoSteerWS","getparamvecResponse"), ofwhat=[ns0.ArrayOfdouble_Def(pname="dval", aname="_dval", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getparamvecResponse, encoded="urn:IoSteerWS")

class getparammatRequest:
    def __init__(self):
        self._id = None
        self._name = None
        self._nr = None
        self._nc = None
        return
getparammatRequest.typecode = Struct(pname=("urn:IoSteerWS","getparammat"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="name", aname="_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="nr", aname="_nr", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="nc", aname="_nc", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getparammatRequest, encoded="urn:IoSteerWS")

class getparammatResponse:
    def __init__(self):
        self._dval = None
        return
getparammatResponse.typecode = Struct(pname=("urn:IoSteerWS","getparammatResponse"), ofwhat=[ns0.ArrayOfdouble_Def(pname="dval", aname="_dval", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getparammatResponse, encoded="urn:IoSteerWS")

class getparamstringRequest:
    def __init__(self):
        self._id = None
        self._name = None
        return
getparamstringRequest.typecode = Struct(pname=("urn:IoSteerWS","getparamstring"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="name", aname="_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getparamstringRequest, encoded="urn:IoSteerWS")

class getparamstringResponse:
    def __init__(self):
        self._value = None
        return
getparamstringResponse.typecode = Struct(pname=("urn:IoSteerWS","getparamstringResponse"), ofwhat=[ZSI.TC.String(pname="value", aname="_value", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getparamstringResponse, encoded="urn:IoSteerWS")

class getparammmat3dRequest:
    def __init__(self):
        self._id = None
        self._name = None
        self._n = None
        self._p = None
        self._q = None
        self._nr = None
        self._nc = None
        return
getparammmat3dRequest.typecode = Struct(pname=("urn:IoSteerWS","getparammmat3d"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="name", aname="_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="n", aname="_n", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="p", aname="_p", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="q", aname="_q", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="nr", aname="_nr", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="nc", aname="_nc", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getparammmat3dRequest, encoded="urn:IoSteerWS")

class getparammmat3dResponse:
    def __init__(self):
        self._mmat3d = None
        return
getparammmat3dResponse.typecode = Struct(pname=("urn:IoSteerWS","getparammmat3dResponse"), ofwhat=[ns0.ArrayOfdouble_Def(pname="mmat3d", aname="_mmat3d", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getparammmat3dResponse, encoded="urn:IoSteerWS")

class getmetadataRequest:
    def __init__(self):
        self._id = None
        self._name = None
        return
getmetadataRequest.typecode = Struct(pname=("urn:IoSteerWS","getmetadata"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="name", aname="_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getmetadataRequest, encoded="urn:IoSteerWS")

class getmetadataResponse:
    def __init__(self):
        self._property = None
        return
getmetadataResponse.typecode = Struct(pname=("urn:IoSteerWS","getmetadataResponse"), ofwhat=[ZSI.TC.String(pname="property", aname="_property", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getmetadataResponse, encoded="urn:IoSteerWS")

class setparamdoubleRequest:
    def __init__(self):
        self._id = None
        self._name = None
        self._value = None
        return
setparamdoubleRequest.typecode = Struct(pname=("urn:IoSteerWS","setparamdouble"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="name", aname="_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.FPdouble(pname="value", aname="_value", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=setparamdoubleRequest, encoded="urn:IoSteerWS")

class setparamdoubleResponse:
    def __init__(self):
        self._status = None
        return
setparamdoubleResponse.typecode = Struct(pname=("urn:IoSteerWS","setparamdoubleResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="status", aname="_status", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=setparamdoubleResponse, encoded="urn:IoSteerWS")

class setparamintRequest:
    def __init__(self):
        self._id = None
        self._name = None
        self._value = None
        return
setparamintRequest.typecode = Struct(pname=("urn:IoSteerWS","setparamint"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="name", aname="_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="value", aname="_value", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=setparamintRequest, encoded="urn:IoSteerWS")

class setparamintResponse:
    def __init__(self):
        self._status = None
        return
setparamintResponse.typecode = Struct(pname=("urn:IoSteerWS","setparamintResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="status", aname="_status", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=setparamintResponse, encoded="urn:IoSteerWS")

class setparamvecRequest:
    def __init__(self):
        self._id = None
        self._name = None
        self._value = None
        self._n = None
        return
setparamvecRequest.typecode = Struct(pname=("urn:IoSteerWS","setparamvec"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="name", aname="_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.ArrayOfdouble_Def(pname="value", aname="_value", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="n", aname="_n", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=setparamvecRequest, encoded="urn:IoSteerWS")

class setparamvecResponse:
    def __init__(self):
        self._status = None
        return
setparamvecResponse.typecode = Struct(pname=("urn:IoSteerWS","setparamvecResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="status", aname="_status", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=setparamvecResponse, encoded="urn:IoSteerWS")

class setparammatRequest:
    def __init__(self):
        self._id = None
        self._name = None
        self._value = None
        self._nr = None
        self._nc = None
        return
setparammatRequest.typecode = Struct(pname=("urn:IoSteerWS","setparammat"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="name", aname="_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.ArrayOfdouble_Def(pname="value", aname="_value", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="nr", aname="_nr", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="nc", aname="_nc", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=setparammatRequest, encoded="urn:IoSteerWS")

class setparammatResponse:
    def __init__(self):
        self._status = None
        return
setparammatResponse.typecode = Struct(pname=("urn:IoSteerWS","setparammatResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="status", aname="_status", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=setparammatResponse, encoded="urn:IoSteerWS")

class setparamstringRequest:
    def __init__(self):
        self._id = None
        self._name = None
        self._value = None
        return
setparamstringRequest.typecode = Struct(pname=("urn:IoSteerWS","setparamstring"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="name", aname="_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="value", aname="_value", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=setparamstringRequest, encoded="urn:IoSteerWS")

class setparamstringResponse:
    def __init__(self):
        self._status = None
        return
setparamstringResponse.typecode = Struct(pname=("urn:IoSteerWS","setparamstringResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="status", aname="_status", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=setparamstringResponse, encoded="urn:IoSteerWS")

class setparammmat3dRequest:
    def __init__(self):
        self._id = None
        self._name = None
        self._value = None
        self._n = None
        self._p = None
        self._q = None
        self._nr = None
        self._nc = None
        return
setparammmat3dRequest.typecode = Struct(pname=("urn:IoSteerWS","setparammmat3d"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="name", aname="_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.ArrayOfdouble_Def(pname="value", aname="_value", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="n", aname="_n", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="p", aname="_p", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="q", aname="_q", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="nr", aname="_nr", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="nc", aname="_nc", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=setparammmat3dRequest, encoded="urn:IoSteerWS")

class setparammmat3dResponse:
    def __init__(self):
        self._status = None
        return
setparammmat3dResponse.typecode = Struct(pname=("urn:IoSteerWS","setparammmat3dResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="status", aname="_status", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=setparammmat3dResponse, encoded="urn:IoSteerWS")

class setmetadataRequest:
    def __init__(self):
        self._id = None
        self._name = None
        self._property = None
        return
setmetadataRequest.typecode = Struct(pname=("urn:IoSteerWS","setmetadata"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="name", aname="_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="property", aname="_property", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=setmetadataRequest, encoded="urn:IoSteerWS")

class setmetadataResponse:
    def __init__(self):
        self._status = None
        return
setmetadataResponse.typecode = Struct(pname=("urn:IoSteerWS","setmetadataResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="status", aname="_status", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=setmetadataResponse, encoded="urn:IoSteerWS")

class listmetadataRequest:
    def __init__(self):
        self._id = None
        return
listmetadataRequest.typecode = Struct(pname=("urn:IoSteerWS","listmetadata"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=listmetadataRequest, encoded="urn:IoSteerWS")

class listmetadataResponse:
    def __init__(self):
        self._list = None
        return
listmetadataResponse.typecode = Struct(pname=("urn:IoSteerWS","listmetadataResponse"), ofwhat=[ZSI.TC.String(pname="list", aname="_list", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=listmetadataResponse, encoded="urn:IoSteerWS")

class deletemetadataRequest:
    def __init__(self):
        self._id = None
        self._name = None
        return
deletemetadataRequest.typecode = Struct(pname=("urn:IoSteerWS","deletemetadata"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="name", aname="_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=deletemetadataRequest, encoded="urn:IoSteerWS")

class deletemetadataResponse:
    def __init__(self):
        self._status = None
        return
deletemetadataResponse.typecode = Struct(pname=("urn:IoSteerWS","deletemetadataResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="status", aname="_status", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=deletemetadataResponse, encoded="urn:IoSteerWS")

class deleteparamRequest:
    def __init__(self):
        self._name = None
        self._id = None
        return
deleteparamRequest.typecode = Struct(pname=("urn:IoSteerWS","deleteparam"), ofwhat=[ZSI.TC.String(pname="name", aname="_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=deleteparamRequest, encoded="urn:IoSteerWS")

class deleteparamResponse:
    def __init__(self):
        self._status = None
        return
deleteparamResponse.typecode = Struct(pname=("urn:IoSteerWS","deleteparamResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="status", aname="_status", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=deleteparamResponse, encoded="urn:IoSteerWS")

class listparamRequest:
    def __init__(self):
        self._type = None
        self._id = None
        return
listparamRequest.typecode = Struct(pname=("urn:IoSteerWS","listparam"), ofwhat=[ZSI.TC.String(pname="type", aname="_type", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=listparamRequest, encoded="urn:IoSteerWS")

class listparamResponse:
    def __init__(self):
        self._list = None
        return
listparamResponse.typecode = Struct(pname=("urn:IoSteerWS","listparamResponse"), ofwhat=[ZSI.TC.String(pname="list", aname="_list", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=listparamResponse, encoded="urn:IoSteerWS")

class getnumobjRequest:
    def __init__(self):
        self._id = None
        return
getnumobjRequest.typecode = Struct(pname=("urn:IoSteerWS","getnumobj"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getnumobjRequest, encoded="urn:IoSteerWS")

class getnumobjResponse:
    def __init__(self):
        self._numobj = None
        return
getnumobjResponse.typecode = Struct(pname=("urn:IoSteerWS","getnumobjResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="numobj", aname="_numobj", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getnumobjResponse, encoded="urn:IoSteerWS")

class getobjnumRequest:
    def __init__(self):
        self._id = None
        return
getobjnumRequest.typecode = Struct(pname=("urn:IoSteerWS","getobjnum"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getobjnumRequest, encoded="urn:IoSteerWS")

class getobjnumResponse:
    def __init__(self):
        self._objnum = None
        return
getobjnumResponse.typecode = Struct(pname=("urn:IoSteerWS","getobjnumResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="objnum", aname="_objnum", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getobjnumResponse, encoded="urn:IoSteerWS")

class testgroupbarrierRequest:
    def __init__(self):
        self._id = None
        return
testgroupbarrierRequest.typecode = Struct(pname=("urn:IoSteerWS","testgroupbarrier"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=testgroupbarrierRequest, encoded="urn:IoSteerWS")

class testgroupbarrierResponse:
    def __init__(self):
        self._state = None
        return
testgroupbarrierResponse.typecode = Struct(pname=("urn:IoSteerWS","testgroupbarrierResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="state", aname="_state", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=testgroupbarrierResponse, encoded="urn:IoSteerWS")

class setgroupbarrierRequest:
    def __init__(self):
        self._id = None
        self._state = None
        return
setgroupbarrierRequest.typecode = Struct(pname=("urn:IoSteerWS","setgroupbarrier"), ofwhat=[ZSI.TCnumbers.Iint(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="state", aname="_state", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=setgroupbarrierRequest, encoded="urn:IoSteerWS")

class setgroupbarrierResponse:
    def __init__(self):
        self._newstate = None
        return
setgroupbarrierResponse.typecode = Struct(pname=("urn:IoSteerWS","setgroupbarrierResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="newstate", aname="_newstate", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=setgroupbarrierResponse, encoded="urn:IoSteerWS")
